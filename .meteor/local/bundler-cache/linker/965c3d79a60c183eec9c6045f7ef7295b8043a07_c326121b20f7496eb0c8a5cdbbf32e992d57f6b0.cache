[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"collections.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// lib/collections.js                                                     //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nmodule.export({\n    items: () => items\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 1);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 2);\nconst items = new Mongo.Collection(\"items\");\nsortType = \"priority\";\nMeteor.methods({\n    'items.insert'(name, quantity, priority) {\n        priority = parseInt(priority);\n\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"You are not authorized to do that.\");\n        }\n\n        items.insert({\n            name,\n            quantity,\n            priority\n        });\n    },\n\n    'items.remove'(item) {\n        check(item._id, String);\n        items.remove(item._id);\n    },\n\n    'setSort'(type) {\n        check(type, String);\n        sortType = type;\n    }\n\n});\n////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// server/main.js                                                         //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\n////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"./lib/collections.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["lib/collections.js","server/main.js"],"names":["module","export","items","Mongo","watch","require","v","Meteor","check","Collection","sortType","methods","name","quantity","priority","parseInt","userId","Error","insert","item","_id","String","remove","type","startup"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAM,MAAIA;AAAX,CAAd;AAAiC,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,UAAMG,CAAN,EAAQ;AAACH,gBAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,WAAOD,CAAP,EAAS;AAACC,iBAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,KAAJ;AAAUR,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,UAAMF,CAAN,EAAQ;AAACE,gBAAMF,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAIpL,MAAMJ,QAAQ,IAAIC,MAAMM,UAAV,CAAqB,OAArB,CAAd;AAEPC,WAAW,UAAX;AAEAH,OAAOI,OAAP,CAAe;AACX,mBAAeC,IAAf,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;AAErCA,mBAAWC,SAASD,QAAT,CAAX;;AAEA,YAAI,CAACP,OAAOS,MAAP,EAAL,EAAsB;AAClB,kBAAM,IAAIT,OAAOU,KAAX,CAAiB,oCAAjB,CAAN;AACH;;AAEDf,cAAMgB,MAAN,CAAa;AACTN,gBADS;AAETC,oBAFS;AAGTC;AAHS,SAAb;AAKH,KAdU;;AAgBX,mBAAeK,IAAf,EAAqB;AACjBX,cAAMW,KAAKC,GAAX,EAAgBC,MAAhB;AAEAnB,cAAMoB,MAAN,CAAaH,KAAKC,GAAlB;AACH,KApBU;;AAsBX,cAAUG,IAAV,EAAgB;AACZf,cAAMe,IAAN,EAAYF,MAAZ;AACAX,mBAAWa,IAAX;AACH;;AAzBU,CAAf,E;;;;;;;;;;;ACRA,IAAIhB,MAAJ;AAAWP,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAEXC,OAAOiB,OAAP,CAAe,MAAM,CACnB;AACD,CAFD,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nexport const items = new Mongo.Collection(\"items\");\n\nsortType = \"priority\";\n\nMeteor.methods({\n    'items.insert'(name, quantity, priority) {\n\n        priority = parseInt(priority);\n\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"You are not authorized to do that.\");\n        }\n\n        items.insert({\n            name,\n            quantity,\n            priority\n        });\n    },\n\n    'items.remove'(item) {\n        check(item._id, String);\n\n        items.remove(item._id);\n    },\n\n    'setSort'(type) {\n        check(type, String);\n        sortType = type;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]